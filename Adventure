import pygame
from pygame.locals import *
import pyganim


pygame.init()
# Создание окна игры
window_width = 896
window_height = 640
screen = pygame.display.set_mode((window_width, window_height), 0, 32)

white = (255, 255, 255)
green = (0, 255, 0)
red = (255, 0, 0)


pygame.display.set_caption("Adventure")

# Изображения худа
background_color = pygame.image.load("fon1.png").convert_alpha()
hudCoin = pygame.image.load("hudCoin.png").convert_alpha()
hudHealth = pygame.image.load("hudHeart_full.png").convert_alpha()
hudHealthHalf = pygame.image.load("hudHeart_half.png").convert_alpha()


# Изменяем размеры
hudCoin_trans = pygame.transform.scale(hudCoin, (100, 100))
hudHealth_trans = pygame.transform.scale(hudHealth, (100, 100))
hudHealthHalf_trans = pygame.transform.scale(hudHealthHalf, (100, 100))

# Анимация
Anim_right = [("alienYellow_walk1.png", 0.1)]
Anim_stay = [("Player.png", 0.1)]
Anim_jump = [("alienYellow_jump.png", 0.1)]
Anim_hit = [("AlienYellow_hit.png", 1.0)]

# Музыка и дополнительные мелочи
count_money = 0 # Счетчик собранных монет
clock = pygame.time.Clock()
sound_click = pygame.mixer.Sound("click3.wav")
wins_music = pygame.mixer.Sound("secosmic_lo.wav")
hit_worm = pygame.mixer.Sound("punch.wav")



# Создание спрайтов
class Hero(pygame.sprite.Sprite):

    def __init__(self):

       pygame.sprite.Sprite.__init__(self)

       self.image = pygame.image.load("Player.png").convert_alpha()
       self.image.set_colorkey(white)


       self.rect = self.image.get_rect()

       # Здоровье
       self.health = 100

       # Характеристики персонажа
       self.speed = 10
       self.jump = 150

       # Расположение
       self.rect.x = 20
       self.rect.y = 314
       self.onGround = True # Находимся на земле.

       # Загрузка анимации
       self.AnimationRight = pyganim.PygAnimation(Anim_right)
       self.AnimationStay = pyganim.PygAnimation(Anim_stay)
       self.AnimationHit = pyganim.PygAnimation(Anim_hit)
       self.AnimationJump = pyganim.PygAnimation(Anim_jump)



    def update(self, left_move, right_move, up_move, damage_mobs):

        if self.rect.x == 0:
            left_move = False

        if self.rect.x == 1880:
            right_move = False

        if left_move is True:
            self.rect.x -= self.speed

        if right_move is True:
            self.rect.x += self.speed
            # Проигрывание и зарисовка анимации
            self.AnimationRight.play()
            self.AnimationRight.blit(self.image, (0, 0))

        if self.onGround is True and up_move is True:
            self.rect.y -= self.jump
            self.AnimationJump.play()
            self.AnimationJump.blit(self.image, (0, 0))
            self.onGround = False

        if damage_mobs is True:
            self.AnimationHit.play()
            self.AnimationHit.blit(self.image, (0, 0))

        if not(right_move or left_move) is True and damage_mobs is False and up_move is False:
            self.AnimationStay.play()
            self.AnimationStay.blit(self.image, (0, 0))


# Экземпляр игрока
player = pygame.sprite.Group()
yellow_hero = Hero()
player.add(yellow_hero)
left_move = right_move = up_move = False  # Кнопки не нажаты
damage_mobs = False # Нет урона от моба

blocks = pygame.sprite.Group()

class Ground(pygame.sprite.Sprite):
    def __init__(self):

       pygame.sprite.Sprite.__init__(self)

       self.image = pygame.image.load("grass.png").convert_alpha()
       self.image.set_colorkey(white)


       self.rect = self.image.get_rect()

       # Расположение
       self.rect.x = 0
       self.rect.y = 570


# Печатаем блок уровня!
change_x = 0
while change_x < 2000:
    block_ground = Ground()
    block_ground.rect.x = change_x
    change_x += 127
    blocks.add(block_ground)


class Money(pygame.sprite.Sprite):
    def __init__(self):

       pygame.sprite.Sprite.__init__(self)

       self.image = pygame.image.load("coinBronze.png").convert_alpha()
       self.image.set_colorkey(white)


       self.rect = self.image.get_rect()

       self.rect.x = 400
       self.rect.y = 460


money = pygame.sprite.Group()

# Первая точка появления
change_x = 400
while change_x <= 750:
    money_bronze = Money()
    money_bronze.rect.x = change_x
    change_x += 150
    money.add(money_bronze)

# Вторая точка появления
change_x = 1100
while change_x <= 1450:
    money_bronze = Money()
    money_bronze.rect.x = change_x
    change_x += 150
    money.add(money_bronze)


class MoneyGold(pygame.sprite.Sprite):
    def __init__(self):
        pygame.sprite.Sprite.__init__(self)
        self.image = pygame.image.load("coinGold.png").convert_alpha()
        self.image.set_colorkey(white)


        self.rect = self.image.get_rect()

        self.rect.x = 1800
        self.rect.y = 460

money_2 = pygame.sprite.Group()
money_gold = MoneyGold()
money_2.add(money_gold)

class Worm_green(pygame.sprite.Sprite):

    def __init__(self):

        pygame.sprite.Sprite.__init__(self)

        self.image = pygame.image.load("wormGreen.png").convert_alpha()
        self.image.set_colorkey(white)


        self.rect = self.image.get_rect()

        self.rect.x = 1000
        self.rect.y = 443
        self.speed = 5

    def update(self):

        self.rect.x += self.speed

        if self.rect.x < 600:
            self.speed *= -1

        if self.rect.x > 1001:
            self.speed *= -1

class Worm_pink(pygame.sprite.Sprite):
    def __init__(self):
        pygame.sprite.Sprite.__init__(self)

        self.image = pygame.image.load("wormPink.png").convert_alpha()
        self.image.set_colorkey(white)


        self.rect = self.image.get_rect()

        self.rect.x = 1700
        self.rect.y = 443
        self.speed = 5

    def update(self):

        self.rect.x += self.speed

        if self.rect.x < 1200:
            self.speed *= -1

        if self.rect.x > 1701:
            self.speed *= -1


mobs = pygame.sprite.Group()
worm = Worm_green()
worm_pink = Worm_pink()
mobs.add(worm)
mobs.add(worm_pink)

class Camera(object):
    def __init__(self, camera_func, width_cam, height_cam):
        self.camera_func = camera_func
        self.state = Rect(0, 0, width_cam, height_cam)

    def apply(self, target):
        return target.rect.move(self.state.topleft)

    def update(self, target):
        self.state = self.camera_func(self.state, target.rect)


def camera_configure(camera, target_rect):
        l, t, _, _ = target_rect
        _, _, w, h = camera
        l = -l + window_width / 2
        t = -t + window_height / 2

        l = min(0, l)
        l = max(-(camera.width - window_width), l)
        t = max(-(camera.height - window_height), t)
        t = min(0, t)
        return Rect(l, t, w, h)

total_level_width = 2000 # Ширина уровня
total_level_height = 1300 # Высота уровня

# Экземпляр динамической камеры
camera = Camera(camera_configure, total_level_width, total_level_height)

# Совокупность экземпляров
entities = pygame.sprite.Group()
entities.add(player)
entities.add(blocks)
entities.add(money)
entities.add(money_2)
entities.add(mobs)

"""def start():
    for event in pygame.event.get():
        if event.type == QUIT:
            pygame.quit()
        elif event.type == KEYDOWN:
            continue
    return None


def Menu():
    while start() == None:
        for event in pygame.event.get():
            if event.type == QUIT:
                pygame.quit()


        pygame.display.update()

    rungame(count_money, left_move, right_move, up_move, damage_mobs)"""


def rungame(f_count_money, f_left_move, f_right_move, f_up_move, f_damage_mobs):
    launch_of_game = True # Игра запущена!
    while launch_of_game:
        # Собранные монеты
        text_money = (str(f_count_money))
        (x, y, fontsize) = (730, 50, 50)
        myFont = pygame.font.SysFont("None", fontsize)
        fontImage = myFont.render(text_money, 0, green)

        health = (str(yellow_hero.health))
        (x2, y2, fontsize) = (700, 150, 50)
        myFont = pygame.font.SysFont("None", fontsize)
        fontImage2 = myFont.render(health, 0, green)

        wins = ("Congratulations! You are take gold coin!")
        (x3, y3, fontsize2) = (300, 300, 100)
        myFont2 = pygame.font.SysFont("None", fontsize2)
        fontImage3 = myFont2.render(wins, 0, red)

        collisions = pygame.sprite.spritecollide(yellow_hero, mobs, False)
        if len(collisions) > 0:
            hit_worm.play()
            # В случае удара герой отскакивает
            if yellow_hero.rect.x > worm.rect.x:
                yellow_hero.rect.x += 30
            else:
                yellow_hero.rect.x -= 30
            yellow_hero.health -= 10

            if yellow_hero.health == 0:
                launch_of_game = False

            f_damage_mobs = True

        else:
            f_damage_mobs = False

        collisions = pygame.sprite.spritecollide(yellow_hero, money, True)
        if len(collisions) > 0:
            f_count_money += 1

        collisions = pygame.sprite.spritecollide(yellow_hero, money_2, True)
        if len(collisions) > 0:
            screen.blit(fontImage3, (x3, y3))
            f_count_money += 3
            wins_music.play()


        for event in pygame.event.get():
            if event.type == QUIT:
                launch_of_game = False

            # Клавиши нажаты!
            if event.type == KEYDOWN:
                if event.key == K_ESCAPE:
                    launch_of_game = False
            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    sound_click.play()
            if event.type == KEYDOWN:
                if event.key == K_RIGHT:
                    f_right_move = True
                if event.key == K_LEFT:
                    f_left_move = True
                if event.key == K_UP and yellow_hero.onGround == True:
                    f_up_move = True

        # Клавиши отпущены
            if event.type == KEYUP:
                if event.key == K_RIGHT:
                    f_right_move = False
                if event.key == K_LEFT:
                    f_left_move = False
                if event.key == K_UP:
                    f_up_move = False
                    yellow_hero.rect.y += yellow_hero.jump
                    yellow_hero.onGround = True

        screen.blit(background_color, (0,0))
        screen.blit(hudCoin_trans, (750, 10))

        if yellow_hero.health <= 50:
            screen.blit(hudHealthHalf_trans, (750, 110))
        else:
            screen.blit(hudHealth_trans, (750, 110))

        screen.blit(fontImage, (x, y))
        screen.blit(fontImage2, (x2, y2))

        clock.tick(40)

    # Рисуем персонажей!
        for event in entities:
            screen.blit(event.image, camera.apply(event))
            camera.update(yellow_hero)



    # Обновляем персонажей
        player.update(f_left_move, f_right_move, f_up_move, f_damage_mobs)
        mobs.update()
        pygame.display.update()
    pygame.quit()

rungame(count_money, left_move, right_move, up_move, damage_mobs)
